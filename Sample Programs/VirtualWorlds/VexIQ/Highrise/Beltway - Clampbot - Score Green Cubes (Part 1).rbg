<Version>1.0.1</Version>

<RBCVersion>1.0.1</RBCVersion>
<Platform>VEXIQ</Platform>
<MenuLevel>Basic</MenuLevel>
<CompilerMode>VirtualWorlds</CompilerMode>
<CompileAndDownload>Yes</CompileAndDownload>
<VirtualWorldIndex>6</VirtualWorldIndex>
<VEXIQDLMethod>Auto</VEXIQDLMethod>
<NaturalLanguageFlag>True</NaturalLanguageFlag>
<RVWParameters>clampbot beltway sp1 autoloadgame</RVWParameters>

<ProgrammingBlock type="comment">Highrise Beltway</ProgrammingBlock>

<ProgrammingBlock type="comment">Robot: Clampbot IQ | Starting Point: A </ProgrammingBlock>

<ProgrammingBlock type="comment">This program will:</ProgrammingBlock>

<ProgrammingBlock type="comment">1) Collect the first two green cubes closest to Starting Point A</ProgrammingBlock>

<ProgrammingBlock type="comment">2) Moves to the belt and turn it on manually CCW</ProgrammingBlock>

<ProgrammingBlock type="comment">3) Stops the belt at the Green Stop Pad</ProgrammingBlock>

<ProgrammingBlock type="comment">4) Stack the cubes on top of the Green Base</ProgrammingBlock>

<ProgrammingBlock type="comment">STEP 1) Collect the green cubes</ProgrammingBlock>

<ProgrammingBlock type="comment">a) lift arm and open claw.</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="moveMotor">
    <Parameters>
        <Parameter name="motorPort" type="base typedef" typeDef="tMotor">armMotor</Parameter>
        <Parameter name="quantity" type="float">100</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">degrees</Parameter>
        <Parameter name="speed" type="short">75</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="moveMotor">
    <Parameters>
        <Parameter name="motorPort" type="base typedef" typeDef="tMotor">clawMotor</Parameter>
        <Parameter name="quantity" type="float">-40</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">degrees</Parameter>
        <Parameter name="speed" type="short">75</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="comment">b) Move forward 1 rotation</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="forward">
    <Parameters>
        <Parameter name="quantity" type="float">1</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">rotations</Parameter>
        <Parameter name="speed" type="short">75</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="comment">c) Turn left to face the warehouse</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="turnLeft">
    <Parameters>
        <Parameter name="quantity" type="float">1.067</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">rotations</Parameter>
        <Parameter name="speed" type="short">75</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="comment">d) Move forward until the sonar sensor is less than 66 mm</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="setMultipleMotors">
    <Parameters>
        <Parameter name="speed" type="short">75</Parameter>
        <Parameter name="firstMotor" type="base typedef" typeDef="tMotor">leftMotor</Parameter>
        <Parameter name="secondMotor" type="base typedef" typeDef="tMotor">rightMotor</Parameter>
        <Parameter name="thirdMotor" type="base typedef" typeDef="tMotor"/>
        <Parameter name="fourthMotor" type="base typedef" typeDef="tMotor"/>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="OneLineLoop" loopType="WaitUntil">
    <Parameters>
        <Parameter name="LHS" type="typedef">getDistanceValue(distanceMM)</Parameter>
        <Parameter name="operator" type="typedef">&lt;=</Parameter>
        <Parameter name="RHS" type="int">66</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="stopAllMotors"/>

<ProgrammingBlock type="comment">e) Stop and pick up the green blocks</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="moveMotor">
    <Parameters>
        <Parameter name="motorPort" type="base typedef" typeDef="tMotor">armMotor</Parameter>
        <Parameter name="quantity" type="float">-70</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">degrees</Parameter>
        <Parameter name="speed" type="short">75</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="moveMotor">
    <Parameters>
        <Parameter name="motorPort" type="base typedef" typeDef="tMotor">clawMotor</Parameter>
        <Parameter name="quantity" type="float">30</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">degrees</Parameter>
        <Parameter name="speed" type="short">75</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="moveMotor">
    <Parameters>
        <Parameter name="motorPort" type="base typedef" typeDef="tMotor">armMotor</Parameter>
        <Parameter name="quantity" type="float">70</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">degrees</Parameter>
        <Parameter name="speed" type="short">75</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="comment">STEP 2) Move toward the belt and turn it on CCW</ProgrammingBlock>

<ProgrammingBlock type="comment">a) Turn right to face the touch sensor toward the belt.</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="turnRight">
    <Parameters>
        <Parameter name="quantity" type="float">1.067</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">rotations</Parameter>
        <Parameter name="speed" type="short">75</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="comment">b) Move backwards until the bumpSwitch = 1 (touched).</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="setMultipleMotors">
    <Parameters>
        <Parameter name="speed" type="short">-75</Parameter>
        <Parameter name="firstMotor" type="base typedef" typeDef="tMotor">leftMotor</Parameter>
        <Parameter name="secondMotor" type="base typedef" typeDef="tMotor">rightMotor</Parameter>
        <Parameter name="thirdMotor" type="base typedef" typeDef="tMotor"/>
        <Parameter name="fourthMotor" type="base typedef" typeDef="tMotor"/>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="OneLineLoop" loopType="WaitUntil">
    <Parameters>
        <Parameter name="LHS" type="typedef">getBumperValue(bumpSwitch)</Parameter>
        <Parameter name="operator" type="typedef">==</Parameter>
        <Parameter name="RHS" type="int">1</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="stopAllMotors"/>

<ProgrammingBlock type="comment">c) Set the Touch LED to Yellow to turn it on CCW</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="setTouchLEDColor">
    <Parameters>
        <Parameter name="nDeviceIndex" type="base typedef" typeDef="tSensors">touchLED</Parameter>
        <Parameter name="nColor" type="base typedef" typeDef="TSimpleColors">colorYellow</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="wait">
    <Parameters>
        <Parameter name="quantity" type="float">.2</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">seconds</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="comment">STEP 3) Stop the belt at the Green Stop Pad</ProgrammingBlock>

<ProgrammingBlock type="comment">a) Set the Touch LED to Green in order to stop at the green pad</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="setTouchLEDColor">
    <Parameters>
        <Parameter name="nDeviceIndex" type="base typedef" typeDef="tSensors">touchLED</Parameter>
        <Parameter name="nColor" type="base typedef" typeDef="TSimpleColors">colorGreen</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="comment">b) Wait until the color sensor is on the green pad</ProgrammingBlock>

<ProgrammingBlock type="OneLineLoop" loopType="WaitUntil">
    <Parameters>
        <Parameter name="LHS" type="typedef">getColorName(colorDetector)</Parameter>
        <Parameter name="operator" type="typedef">==</Parameter>
        <Parameter name="RHS" type="int">colorGreen</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="comment">c) Wait 5 seconds to be sure that the pad has come to a complete stop</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="wait">
    <Parameters>
        <Parameter name="quantity" type="float">5</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">seconds</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="comment">STEP 3) Stack the cubes on the Green Base</ProgrammingBlock>

<ProgrammingBlock type="comment">a) Position the wrist for percise stacking.</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="moveMotor">
    <Parameters>
        <Parameter name="motorPort" type="base typedef" typeDef="tMotor">wristMotor</Parameter>
        <Parameter name="quantity" type="float">60</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">degrees</Parameter>
        <Parameter name="speed" type="short">75</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="comment">c) Move forward until the Sonar Sensor is less than 100 mm.</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="setMultipleMotors">
    <Parameters>
        <Parameter name="speed" type="short">75</Parameter>
        <Parameter name="firstMotor" type="base typedef" typeDef="tMotor">leftMotor</Parameter>
        <Parameter name="secondMotor" type="base typedef" typeDef="tMotor">rightMotor</Parameter>
        <Parameter name="thirdMotor" type="base typedef" typeDef="tMotor"/>
        <Parameter name="fourthMotor" type="base typedef" typeDef="tMotor"/>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="OneLineLoop" loopType="WaitUntil">
    <Parameters>
        <Parameter name="LHS" type="typedef">getDistanceValue(distanceMM)</Parameter>
        <Parameter name="operator" type="typedef">&lt;=</Parameter>
        <Parameter name="RHS" type="int">100</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="stopAllMotors"/>

<ProgrammingBlock type="comment">d) Open claw to unload blocks on the green base.</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="moveMotor">
    <Parameters>
        <Parameter name="motorPort" type="base typedef" typeDef="tMotor">clawMotor</Parameter>
        <Parameter name="quantity" type="float">-40</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">degrees</Parameter>
        <Parameter name="speed" type="short">50</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="comment">c) Move backwards 1 rotation to prevent interference when stacking.</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="backward">
    <Parameters>
        <Parameter name="quantity" type="float">1</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">rotations</Parameter>
        <Parameter name="speed" type="short">50</Parameter>
    </Parameters>
</ProgrammingBlock>

<RobotConfiguration>#pragma config(Sensor, port2,  touchLED,       sensorVexIQ_LED)
#pragma config(Sensor, port3,  colorDetector,  sensorVexIQ_ColorHue)
#pragma config(Sensor, port4,  gyroSensor,     sensorVexIQ_Gyro)
#pragma config(Sensor, port7,  distanceMM,     sensorVexIQ_Distance)
#pragma config(Sensor, port8,  bumpSwitch,     sensorVexIQ_Touch)
#pragma config(Motor,  motor1,          leftMotor,     tmotorVexIQ, PIDControl, driveLeft, encoder)
#pragma config(Motor,  motor6,          rightMotor,    tmotorVexIQ, PIDControl, reversed, driveRight, encoder)
#pragma config(Motor,  motor10,         armMotor,      tmotorVexIQ, PIDControl, encoder)
#pragma config(Motor,  motor11,         clawMotor,     tmotorVexIQ, PIDControl, encoder)
#pragma config(Motor,  motor12,         wristMotor,    tmotorVexIQ, PIDControl, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//
</RobotConfiguration>

<CSource>#pragma config(Sensor, port2,  touchLED,       sensorVexIQ_LED)
#pragma config(Sensor, port3,  colorDetector,  sensorVexIQ_ColorHue)
#pragma config(Sensor, port4,  gyroSensor,     sensorVexIQ_Gyro)
#pragma config(Sensor, port7,  distanceMM,     sensorVexIQ_Distance)
#pragma config(Sensor, port8,  bumpSwitch,     sensorVexIQ_Touch)
#pragma config(Motor,  motor1,          leftMotor,     tmotorVexIQ, PIDControl, driveLeft, encoder)
#pragma config(Motor,  motor6,          rightMotor,    tmotorVexIQ, PIDControl, reversed, driveRight, encoder)
#pragma config(Motor,  motor10,         armMotor,      tmotorVexIQ, PIDControl, encoder)
#pragma config(Motor,  motor11,         clawMotor,     tmotorVexIQ, PIDControl, encoder)
#pragma config(Motor,  motor12,         wristMotor,    tmotorVexIQ, PIDControl, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//


task main()
{
	// Highrise Beltway
	// Robot: Clampbot IQ | Starting Point: A 
	// This program will:
	// 1) Collect the first two green cubes closest to Starting Point A
	// 2) Moves to the belt and turn it on manually CCW
	// 3) Stops the belt at the Green Stop Pad
	// 4) Stack the cubes on top of the Green Base
	// STEP 1) Collect the green cubes
	// a) lift arm and open claw.
	moveMotor(armMotor, 100, degrees, 75);
	moveMotor(clawMotor, -40, degrees, 75);
	// b) Move forward 1 rotation
	forward(1, rotations, 75);
	// c) Turn left to face the warehouse
	turnLeft(1.067, rotations, 75);
	// d) Move forward until the sonar sensor is less than 66 mm
	setMultipleMotors(75, leftMotor, rightMotor, , );
	waitUntil (getDistanceValue(distanceMM) &lt;= 66);
	stopAllMotors();
	// e) Stop and pick up the green blocks
	moveMotor(armMotor, -70, degrees, 75);
	moveMotor(clawMotor, 30, degrees, 75);
	moveMotor(armMotor, 70, degrees, 75);
	// STEP 2) Move toward the belt and turn it on CCW
	// a) Turn right to face the touch sensor toward the belt.
	turnRight(1.067, rotations, 75);
	// b) Move backwards until the bumpSwitch = 1 (touched).
	setMultipleMotors(-75, leftMotor, rightMotor, , );
	waitUntil (getBumperValue(bumpSwitch) == 1);
	stopAllMotors();
	// c) Set the Touch LED to Yellow to turn it on CCW
	setTouchLEDColor(touchLED, colorYellow);
	wait(.2, seconds);
	// STEP 3) Stop the belt at the Green Stop Pad
	// a) Set the Touch LED to Green in order to stop at the green pad
	setTouchLEDColor(touchLED, colorGreen);
	// b) Wait until the color sensor is on the green pad
	waitUntil (getColorName(colorDetector) == colorGreen);
	// c) Wait 5 seconds to be sure that the pad has come to a complete stop
	wait(5, seconds);
	// STEP 3) Stack the cubes on the Green Base
	// a) Position the wrist for percise stacking.
	moveMotor(wristMotor, 60, degrees, 75);
	// c) Move forward until the Sonar Sensor is less than 100 mm.
	setMultipleMotors(75, leftMotor, rightMotor, , );
	waitUntil (getDistanceValue(distanceMM) &lt;= 100);
	stopAllMotors();
	// d) Open claw to unload blocks on the green base.
	moveMotor(clawMotor, -40, degrees, 50);
	// c) Move backwards 1 rotation to prevent interference when stacking.
	backward(1, rotations, 50);
}
</CSource>
