<Version>1.0.1</Version>

<ProgrammingBlock type="comment">Keep looping forever</ProgrammingBlock>

<ProgrammingBlock type="loop" loopType="RepeatForever"/>

<ProgrammingBlock type="comment">Control the robot with Tank Control style driving</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="tankControl">
    <Parameters>
        <Parameter name="rightJoystick" type="base typedef" typeDef="TVexJoysticks">ChD</Parameter>
        <Parameter name="leftJoystick" type="base typedef" typeDef="TVexJoysticks">ChA</Parameter>
        <Parameter name="threshold" type="short">10</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="comment">If the Bumper Switch is not pressed (value of 0)</ProgrammingBlock>

<ProgrammingBlock type="loop" loopType="IfThen">
    <Parameters>
        <Parameter name="LHS" type="typedef">getBumperValue(bumpSwitch)</Parameter>
        <Parameter name="operator" type="typedef">==</Parameter>
        <Parameter name="RHS" type="int">0</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="comment">Control the Arm Motor with buttons RUp and RDown (power level 75)</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="armControl">
    <Parameters>
        <Parameter name="armMotorPort" type="base typedef" typeDef="tMotor">armMotor</Parameter>
        <Parameter name="upButton" type="base typedef" typeDef="TVexJoysticks">BtnRUp</Parameter>
        <Parameter name="downButton" type="base typedef" typeDef="TVexJoysticks">BtnRDown</Parameter>
        <Parameter name="armSpeed" type="short">75</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="else"/>

<ProgrammingBlock type="comment">Else, the Bumper Switch is pressed</ProgrammingBlock>

<ProgrammingBlock type="comment">If the Joystick's RUp button is pressed</ProgrammingBlock>

<ProgrammingBlock type="loop" loopType="IfThen">
    <Parameters>
        <Parameter name="LHS" type="typedef">getJoystickValue(BtnRUp)</Parameter>
        <Parameter name="operator" type="typedef">==</Parameter>
        <Parameter name="RHS" type="int">1</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="else"/>

<ProgrammingBlock type="end"/>

<ProgrammingBlock type="end"/>

<ProgrammingBlock type="end"/>

<RobotConfiguration>#pragma config(Sensor, port2,  touchLED,       sensorVexIQ_LED)
#pragma config(Sensor, port3,  colorDetector,  sensorVexIQ_ColorHue)
#pragma config(Sensor, port4,  gyroSensor,     sensorVexIQ_Gyro)
#pragma config(Sensor, port7,  distanceMM,     sensorVexIQ_Distance)
#pragma config(Sensor, port8,  bumpSwitch,     sensorVexIQ_Touch)
#pragma config(Motor,  motor1,          leftMotor,     tmotorVexIQ, openLoop, driveLeft, encoder)
#pragma config(Motor,  motor6,          rightMotor,    tmotorVexIQ, openLoop, reversed, driveRight, encoder)
#pragma config(Motor,  motor10,         armMotor,      tmotorVexIQ, openLoop, encoder)
#pragma config(Motor,  motor11,         clawMotor,     tmotorVexIQ, openLoop, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//
</RobotConfiguration>

<CSource>#pragma config(Sensor, port2,  touchLED,       sensorVexIQ_LED)
#pragma config(Sensor, port3,  colorDetector,  sensorVexIQ_ColorHue)
#pragma config(Sensor, port4,  gyroSensor,     sensorVexIQ_Gyro)
#pragma config(Sensor, port7,  distanceMM,     sensorVexIQ_Distance)
#pragma config(Sensor, port8,  bumpSwitch,     sensorVexIQ_Touch)
#pragma config(Motor,  motor1,          leftMotor,     tmotorVexIQ, openLoop, driveLeft, encoder)
#pragma config(Motor,  motor6,          rightMotor,    tmotorVexIQ, openLoop, reversed, driveRight, encoder)
#pragma config(Motor,  motor10,         armMotor,      tmotorVexIQ, openLoop, encoder)
#pragma config(Motor,  motor11,         clawMotor,     tmotorVexIQ, openLoop, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//


task main()
{
	// Keep looping forever
	repeat (forever) {
		// Control the robot with Tank Control style driving
		tankControl(ChD, ChA, 10);
		// If the Bumper Switch is not pressed (value of 0)
		if (getBumperValue(bumpSwitch) == 0) {
			// Control the Arm Motor with buttons RUp and RDown (power level 75)
			armControl(armMotor, BtnRUp, BtnRDown, 75);
		} else {
			// Else, the Bumper Switch is pressed
			// If the Joystick's RUp button is pressed
			if (getJoystickValue(BtnRUp) == 1) {
			} else {
			}
		}
	}
}
</CSource>
