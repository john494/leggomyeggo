<Version>1.0.1</Version>

<ProgrammingBlock type="loop" loopType="RepeatForever"/>

<ProgrammingBlock type="loop" loopType="IfThen">
    <Parameters>
        <Parameter name="LHS" type="typedef">getDistanceValue(distanceMM)</Parameter>
        <Parameter name="operator" type="typedef">&gt;</Parameter>
        <Parameter name="RHS" type="int">75</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="setMotor">
    <Parameters>
        <Parameter name="motorPort" type="base typedef" typeDef="tMotor">motor1</Parameter>
        <Parameter name="speed" type="short">50</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="setMotor">
    <Parameters>
        <Parameter name="motorPort" type="base typedef" typeDef="tMotor">motor6</Parameter>
        <Parameter name="speed" type="short">50</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="else"/>

<ProgrammingBlock type="functionCall" function="stopAllMotors"/>

<ProgrammingBlock type="functionCall" function="wait">
    <Parameters>
        <Parameter name="quantity" type="float">1</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">seconds</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="backward">
    <Parameters>
        <Parameter name="quantity" type="float">2</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">seconds</Parameter>
        <Parameter name="speed" type="short">50</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="turnLeft">
    <Parameters>
        <Parameter name="quantity" type="float">1</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">seconds</Parameter>
        <Parameter name="speed" type="short">50</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="end"/>

<ProgrammingBlock type="end"/>

<RobotConfiguration>#pragma config(StandardModel, "VEX IQ Clawbot")
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//
</RobotConfiguration>

<CSource>#pragma config(StandardModel, "VEX IQ Clawbot")
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//


task main()
{
	repeat (forever) {
		if (getDistanceValue(distanceMM) &gt; 75) {
			setMotor(motor1, 50);
			setMotor(motor6, 50);
		} else {
			stopAllMotors();
			wait(1, seconds);
			backward(2, seconds, 50);
			turnLeft(1, seconds, 50);
		}
	}
}
</CSource>
