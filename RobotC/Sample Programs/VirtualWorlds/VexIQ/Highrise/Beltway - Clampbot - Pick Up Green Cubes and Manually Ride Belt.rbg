<Version>1.0.1</Version>
<RBCVersion>1.0.1</RBCVersion>
<Platform>VEXIQ</Platform>
<MenuLevel>Basic</MenuLevel>
<CompilerMode>VirtualWorlds</CompilerMode>
<CompileAndDownload>Yes</CompileAndDownload>
<VirtualWorldIndex>6</VirtualWorldIndex>
<VEXIQDLMethod>Auto</VEXIQDLMethod>
<NaturalLanguageFlag>True</NaturalLanguageFlag>
<RVWParameters>clampbot beltway sp1 autoloadgame</RVWParameters>
<ProgrammingBlock type="comment">Highrise Beltway</ProgrammingBlock>

<ProgrammingBlock type="comment">Highrise Beltway</ProgrammingBlock>

<ProgrammingBlock type="comment">Robot: Clampbot IQ | Bottom Starting Point</ProgrammingBlock>

<ProgrammingBlock type="comment">This program will collect the first two green cubes closest to Starting Point A</ProgrammingBlock>

<ProgrammingBlock type="comment">Raise the Arm and Open the Claw</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="moveMotor">
    <Parameters>
        <Parameter name="motorPort" type="base typedef" typeDef="tMotor">armMotor</Parameter>
        <Parameter name="quantity" type="float">100</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">degrees</Parameter>
        <Parameter name="speed" type="short">75</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="moveMotor">
    <Parameters>
        <Parameter name="motorPort" type="base typedef" typeDef="tMotor">clawMotor</Parameter>
        <Parameter name="quantity" type="float">-40</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">degrees</Parameter>
        <Parameter name="speed" type="short">75</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="comment">Move Forward and Turn toward the cubes</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="forward">
    <Parameters>
        <Parameter name="quantity" type="float">1</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">rotations</Parameter>
        <Parameter name="speed" type="short">75</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="turnLeft">
    <Parameters>
        <Parameter name="quantity" type="float">1.067</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">rotations</Parameter>
        <Parameter name="speed" type="short">75</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="comment">Move Forward until the Distance Sensor detects the robot is near the cubes</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="setMultipleMotors">
    <Parameters>
        <Parameter name="speed" type="short">75</Parameter>
        <Parameter name="firstMotor" type="base typedef" typeDef="tMotor">leftMotor</Parameter>
        <Parameter name="secondMotor" type="base typedef" typeDef="tMotor">rightMotor</Parameter>
        <Parameter name="thirdMotor" type="base typedef" typeDef="tMotor"/>
        <Parameter name="fourthMotor" type="base typedef" typeDef="tMotor"/>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="OneLineLoop" loopType="WaitUntil">
    <Parameters>
        <Parameter name="LHS" type="typedef">getDistanceValue(distanceMM)</Parameter>
        <Parameter name="operator" type="typedef">&lt;=</Parameter>
        <Parameter name="RHS" type="int">66</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="stopAllMotors"/>

<ProgrammingBlock type="comment">Pick Up the first two green cubes</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="moveMotor">
    <Parameters>
        <Parameter name="motorPort" type="base typedef" typeDef="tMotor">armMotor</Parameter>
        <Parameter name="quantity" type="float">-70</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">degrees</Parameter>
        <Parameter name="speed" type="short">75</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="moveMotor">
    <Parameters>
        <Parameter name="motorPort" type="base typedef" typeDef="tMotor">clawMotor</Parameter>
        <Parameter name="quantity" type="float">30</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">degrees</Parameter>
        <Parameter name="speed" type="short">75</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="moveMotor">
    <Parameters>
        <Parameter name="motorPort" type="base typedef" typeDef="tMotor">armMotor</Parameter>
        <Parameter name="quantity" type="float">70</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">degrees</Parameter>
        <Parameter name="speed" type="short">75</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="comment">Turn right so the robot is facing away from the wall</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="turnRight">
    <Parameters>
        <Parameter name="quantity" type="float">1.067</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">rotations</Parameter>
        <Parameter name="speed" type="short">75</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="comment">Back up until the bump switch hits the wall</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="setMultipleMotors">
    <Parameters>
        <Parameter name="speed" type="short">-75</Parameter>
        <Parameter name="firstMotor" type="base typedef" typeDef="tMotor">leftMotor</Parameter>
        <Parameter name="secondMotor" type="base typedef" typeDef="tMotor">rightMotor</Parameter>
        <Parameter name="thirdMotor" type="base typedef" typeDef="tMotor"/>
        <Parameter name="fourthMotor" type="base typedef" typeDef="tMotor"/>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="OneLineLoop" loopType="WaitUntil">
    <Parameters>
        <Parameter name="LHS" type="typedef">getBumperValue(bumpSwitch)</Parameter>
        <Parameter name="operator" type="typedef">==</Parameter>
        <Parameter name="RHS" type="int">1</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="stopAllMotors"/>

<ProgrammingBlock type="comment">Spin the belt Counter Clockwise by setting the Touch LED to Yellow</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="setTouchLEDColor">
    <Parameters>
        <Parameter name="nDeviceIndex" type="base typedef" typeDef="tSensors">touchLED</Parameter>
        <Parameter name="nColor" type="base typedef" typeDef="TSimpleColors">colorYellow</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="comment">Allow the belt to run for 10 seconds</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="wait">
    <Parameters>
        <Parameter name="quantity" type="float">10</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">seconds</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="comment">Once the program ends, the Touch LED turns off/is colorNone, so the belt stops</ProgrammingBlock>

<RobotConfiguration>#pragma config(Sensor, port2,  touchLED,       sensorVexIQ_LED)
#pragma config(Sensor, port3,  colorDetector,  sensorVexIQ_ColorHue)
#pragma config(Sensor, port4,  gyroSensor,     sensorVexIQ_Gyro)
#pragma config(Sensor, port7,  distanceMM,     sensorVexIQ_Distance)
#pragma config(Sensor, port8,  bumpSwitch,     sensorVexIQ_Touch)
#pragma config(Motor,  motor1,          leftMotor,     tmotorVexIQ, PIDControl, driveLeft, encoder)
#pragma config(Motor,  motor6,          rightMotor,    tmotorVexIQ, PIDControl, reversed, driveRight, encoder)
#pragma config(Motor,  motor10,         armMotor,      tmotorVexIQ, PIDControl, encoder)
#pragma config(Motor,  motor11,         clawMotor,     tmotorVexIQ, PIDControl, encoder)
#pragma config(Motor,  motor12,         wristMotor,    tmotorVexIQ, PIDControl, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//
</RobotConfiguration>

<CSource>#pragma config(Sensor, port2,  touchLED,       sensorVexIQ_LED)
#pragma config(Sensor, port3,  colorDetector,  sensorVexIQ_ColorHue)
#pragma config(Sensor, port4,  gyroSensor,     sensorVexIQ_Gyro)
#pragma config(Sensor, port7,  distanceMM,     sensorVexIQ_Distance)
#pragma config(Sensor, port8,  bumpSwitch,     sensorVexIQ_Touch)
#pragma config(Motor,  motor1,          leftMotor,     tmotorVexIQ, PIDControl, driveLeft, encoder)
#pragma config(Motor,  motor6,          rightMotor,    tmotorVexIQ, PIDControl, reversed, driveRight, encoder)
#pragma config(Motor,  motor10,         armMotor,      tmotorVexIQ, PIDControl, encoder)
#pragma config(Motor,  motor11,         clawMotor,     tmotorVexIQ, PIDControl, encoder)
#pragma config(Motor,  motor12,         wristMotor,    tmotorVexIQ, PIDControl, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//


task main()
{
	// Highrise Beltway
	// Robot: Clampbot IQ | Bottom Starting Point
	// This program will collect the first two green cubes closest to Starting Point A
	// Raise the Arm and Open the Claw
	moveMotor(armMotor, 100, degrees, 75);
	moveMotor(clawMotor, -40, degrees, 75);
	// Move Forward and Turn toward the cubes
	forward(1, rotations, 75);
	turnLeft(1.067, rotations, 75);
	// Move Forward until the Distance Sensor detects the robot is near the cubes
	setMultipleMotors(75, leftMotor, rightMotor, , );
	waitUntil (getDistanceValue(distanceMM) &lt;= 66);
	stopAllMotors();
	// Pick Up the first two green cubes
	moveMotor(armMotor, -70, degrees, 75);
	moveMotor(clawMotor, 30, degrees, 75);
	moveMotor(armMotor, 70, degrees, 75);
	// Turn right so the robot is facing away from the wall
	turnRight(1.067, rotations, 75);
	// Back up until the bump switch hits the wall
	setMultipleMotors(-75, leftMotor, rightMotor, , );
	waitUntil (getBumperValue(bumpSwitch) == 1);
	stopAllMotors();
	// Spin the belt Counter Clockwise by setting the Touch LED to Yellow
	setTouchLEDColor(touchLED, colorYellow);
	// Allow the belt to run for 10 seconds
	wait(10, seconds);
	// Once the program ends, the Touch LED turns off/is colorNone, so the belt stops
}
</CSource>
