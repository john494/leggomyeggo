<Version>1.0.1</Version>

<ProgrammingBlock type="comment">Keeps looping forever</ProgrammingBlock>

<ProgrammingBlock type="loop" loopType="RepeatForever"/>

<ProgrammingBlock type="comment">If the Touch LED is pressed (value of 1)...</ProgrammingBlock>

<ProgrammingBlock type="loop" loopType="IfOnly">
    <Parameters>
        <Parameter name="LHS" type="typedef">getTouchLEDValue(touchLED)</Parameter>
        <Parameter name="operator" type="typedef">==</Parameter>
        <Parameter name="RHS" type="int">1</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="comment">Turn the claw motor on at power level 25</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="setMotor">
    <Parameters>
        <Parameter name="motorPort" type="base typedef" typeDef="tMotor">clawMotor</Parameter>
        <Parameter name="speed" type="short">25</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="comment">Reset the gyro to 0 degrees</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="resetGyro">
    <Parameters>
        <Parameter name="nDeviceIndex" type="base typedef" typeDef="tSensors">gyroSensor</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="comment">While the robot's rotation is less than 180 degrees</ProgrammingBlock>

<ProgrammingBlock type="loop" loopType="WhileDo">
    <Parameters>
        <Parameter name="LHS" type="typedef">getGyroDegrees(gyroSensor)</Parameter>
        <Parameter name="operator" type="typedef">&lt;</Parameter>
        <Parameter name="RHS" type="int">180</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="comment">Slowly turn the robot to the left</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="setMotor">
    <Parameters>
        <Parameter name="motorPort" type="base typedef" typeDef="tMotor">leftMotor</Parameter>
        <Parameter name="speed" type="short">-25</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="setMotor">
    <Parameters>
        <Parameter name="motorPort" type="base typedef" typeDef="tMotor">rightMotor</Parameter>
        <Parameter name="speed" type="short">25</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="end"/>

<ProgrammingBlock type="comment">Forward for 5 seconds at power level 50</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="forward">
    <Parameters>
        <Parameter name="quantity" type="float">5</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">seconds</Parameter>
        <Parameter name="speed" type="short">50</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="comment">Open the claw for 3 seconds at power level 50</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="moveMotor">
    <Parameters>
        <Parameter name="motorPort" type="base typedef" typeDef="tMotor">clawMotor</Parameter>
        <Parameter name="quantity" type="float">3</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">seconds</Parameter>
        <Parameter name="speed" type="short">-50</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="end"/>

<ProgrammingBlock type="end"/>

<RobotConfiguration>#pragma config(Sensor, port2,  touchLED,       sensorVexIQ_LED)
#pragma config(Sensor, port3,  colorDetector,  sensorVexIQ_ColorHue)
#pragma config(Sensor, port4,  gyroSensor,     sensorVexIQ_Gyro)
#pragma config(Sensor, port7,  distanceMM,     sensorVexIQ_Distance)
#pragma config(Sensor, port8,  bumpSwitch,     sensorVexIQ_Touch)
#pragma config(Motor,  motor1,          leftMotor,     tmotorVexIQ, openLoop, driveLeft, encoder)
#pragma config(Motor,  motor6,          rightMotor,    tmotorVexIQ, openLoop, reversed, driveRight, encoder)
#pragma config(Motor,  motor10,         armMotor,      tmotorVexIQ, openLoop, encoder)
#pragma config(Motor,  motor11,         clawMotor,     tmotorVexIQ, openLoop, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//
</RobotConfiguration>

<CSource>#pragma config(Sensor, port2,  touchLED,       sensorVexIQ_LED)
#pragma config(Sensor, port3,  colorDetector,  sensorVexIQ_ColorHue)
#pragma config(Sensor, port4,  gyroSensor,     sensorVexIQ_Gyro)
#pragma config(Sensor, port7,  distanceMM,     sensorVexIQ_Distance)
#pragma config(Sensor, port8,  bumpSwitch,     sensorVexIQ_Touch)
#pragma config(Motor,  motor1,          leftMotor,     tmotorVexIQ, openLoop, driveLeft, encoder)
#pragma config(Motor,  motor6,          rightMotor,    tmotorVexIQ, openLoop, reversed, driveRight, encoder)
#pragma config(Motor,  motor10,         armMotor,      tmotorVexIQ, openLoop, encoder)
#pragma config(Motor,  motor11,         clawMotor,     tmotorVexIQ, openLoop, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//


task main()
{
	// Keeps looping forever
	repeat (forever) {
		// If the Touch LED is pressed (value of 1)...
		if (getTouchLEDValue(touchLED) == 1) {
			// Turn the claw motor on at power level 25
			setMotor(clawMotor, 25);
			// Reset the gyro to 0 degrees
			resetGyro(gyroSensor);
			// While the robot's rotation is less than 180 degrees
			while (getGyroDegrees(gyroSensor) &lt; 180) {
				// Slowly turn the robot to the left
				setMotor(leftMotor, -25);
				setMotor(rightMotor, 25);
			}
			// Forward for 5 seconds at power level 50
			forward(5, seconds, 50);
			// Open the claw for 3 seconds at power level 50
			moveMotor(clawMotor, 3, seconds, -50);
		}
	}
}
</CSource>
