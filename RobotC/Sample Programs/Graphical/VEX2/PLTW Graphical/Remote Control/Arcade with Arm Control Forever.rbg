<Version>1.0.1</Version>

<ProgrammingBlock type="loop" loopType="RepeatForever"/>

<ProgrammingBlock type="functionCall" function="arcadeControl">
    <Parameters>
        <Parameter name="verticalJoystick" type="base typedef" typeDef="TVexJoysticks">Ch2</Parameter>
        <Parameter name="horizontalJoystick" type="base typedef" typeDef="TVexJoysticks">Ch1</Parameter>
        <Parameter name="threshold" type="short">10</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="loop" loopType="IfThen">
    <Parameters>
        <Parameter name="LHS" type="typedef">vexRT[Btn5U]</Parameter>
        <Parameter name="operator" type="typedef">==</Parameter>
        <Parameter name="RHS" type="int">1</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="startMotor">
    <Parameters>
        <Parameter name="motorPort" type="base typedef" typeDef="tMotor">armMotor</Parameter>
        <Parameter name="speed" type="char">95</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="else"/>

<ProgrammingBlock type="loop" loopType="IfThen">
    <Parameters>
        <Parameter name="LHS" type="typedef">vexRT[Btn5D]</Parameter>
        <Parameter name="operator" type="typedef">==</Parameter>
        <Parameter name="RHS" type="int">1</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="startMotor">
    <Parameters>
        <Parameter name="motorPort" type="base typedef" typeDef="tMotor">armMotor</Parameter>
        <Parameter name="speed" type="char">-95</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="else"/>

<ProgrammingBlock type="functionCall" function="stopMotor">
    <Parameters>
        <Parameter name="motorPort" type="base typedef" typeDef="tMotor">armMotor</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="end"/>

<ProgrammingBlock type="end"/>

<ProgrammingBlock type="end"/>

<RobotConfiguration>#pragma config(Sensor, in3,    potentiometer,  sensorPotentiometer)
#pragma config(Sensor, in4,    light,          sensorReflection)
#pragma config(Sensor, in6,    accelZ,         sensorAccelerometer)
#pragma config(Sensor, in7,    accelY,         sensorAccelerometer)
#pragma config(Sensor, in8,    accelX,         sensorAccelerometer)
#pragma config(Sensor, dgtl1,  rightEncoder,   sensorQuadEncoder)
#pragma config(Sensor, dgtl3,  leftEncoder,    sensorQuadEncoder)
#pragma config(Sensor, dgtl6,  frontTouch,     sensorTouch)
#pragma config(Sensor, dgtl8,  sonarCM,        sensorSONAR_cm)
#pragma config(Sensor, dgtl11, backTouch,      sensorTouch)
#pragma config(Motor,  port2,           rightMotor,    tmotorServoContinuousRotation, openLoop, reversed, driveRight)
#pragma config(Motor,  port3,           leftMotor,     tmotorServoContinuousRotation, openLoop, driveLeft)
#pragma config(Motor,  port6,           armMotor,      tmotorServoContinuousRotation, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//
</RobotConfiguration>

<CSource>#pragma config(Sensor, in3,    potentiometer,  sensorPotentiometer)
#pragma config(Sensor, in4,    light,          sensorReflection)
#pragma config(Sensor, in6,    accelZ,         sensorAccelerometer)
#pragma config(Sensor, in7,    accelY,         sensorAccelerometer)
#pragma config(Sensor, in8,    accelX,         sensorAccelerometer)
#pragma config(Sensor, dgtl1,  rightEncoder,   sensorQuadEncoder)
#pragma config(Sensor, dgtl3,  leftEncoder,    sensorQuadEncoder)
#pragma config(Sensor, dgtl6,  frontTouch,     sensorTouch)
#pragma config(Sensor, dgtl8,  sonarCM,        sensorSONAR_cm)
#pragma config(Sensor, dgtl11, backTouch,      sensorTouch)
#pragma config(Motor,  port2,           rightMotor,    tmotorServoContinuousRotation, openLoop, reversed, driveRight)
#pragma config(Motor,  port3,           leftMotor,     tmotorServoContinuousRotation, openLoop, driveLeft)
#pragma config(Motor,  port6,           armMotor,      tmotorServoContinuousRotation, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//


task main()
{
	repeat (forever) {
		arcadeControl(Ch2, Ch1, 10);
		if (vexRT[Btn5U] == 1) {
			startMotor(armMotor, 95);
		} else {
			if (vexRT[Btn5D] == 1) {
				startMotor(armMotor, -95);
			} else {
				stopMotor(armMotor);
			}
		}
	}
}
</CSource>
