<Version>1.0.1</Version>

<ProgrammingBlock type="functionCall" function="playTone">
    <Parameters>
        <Parameter name="frequency" type="long">780</Parameter>
        <Parameter name="durationIn10MsecTicks" type="long">50</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="forward">
    <Parameters>
        <Parameter name="quantity" type="float">1</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">rotations</Parameter>
        <Parameter name="speed" type="short">50</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="playTone">
    <Parameters>
        <Parameter name="frequency" type="long">900</Parameter>
        <Parameter name="durationIn10MsecTicks" type="long">50</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="turnLeft">
    <Parameters>
        <Parameter name="quantity" type="float">2</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">rotations</Parameter>
        <Parameter name="speed" type="short">50</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="playTone">
    <Parameters>
        <Parameter name="frequency" type="long">900</Parameter>
        <Parameter name="durationIn10MsecTicks" type="long">25</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="backward">
    <Parameters>
        <Parameter name="quantity" type="float">1</Parameter>
        <Parameter name="unitType" type="base typedef" typeDef="tMovementUnits">rotations</Parameter>
        <Parameter name="speed" type="short">50</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="playTone">
    <Parameters>
        <Parameter name="frequency" type="long">120</Parameter>
        <Parameter name="durationIn10MsecTicks" type="long">75</Parameter>
    </Parameters>
</ProgrammingBlock>

<RobotConfiguration>#pragma config(Sensor, S1,     touchSensor,    sensorEV3_Touch)
#pragma config(Sensor, S2,     gyroSensor,     sensorEV3_Gyro, modeEV3Gyro_RateAndAngle)
#pragma config(Sensor, S3,     colorSensor,    sensorEV3_Color, modeEV3Color_Color)
#pragma config(Sensor, S4,     sonarSensor,    sensorEV3_Ultrasonic)
#pragma config(Motor,  motorA,          armMotor,      tmotorEV3_Large, PIDControl, encoder)
#pragma config(Motor,  motorB,          leftMotor,     tmotorEV3_Large, PIDControl, driveLeft, encoder)
#pragma config(Motor,  motorC,          rightMotor,    tmotorEV3_Large, PIDControl, driveRight, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//
</RobotConfiguration>

<CSource>#pragma config(Sensor, S1,     touchSensor,    sensorEV3_Touch)
#pragma config(Sensor, S2,     gyroSensor,     sensorEV3_Gyro, modeEV3Gyro_RateAndAngle)
#pragma config(Sensor, S3,     colorSensor,    sensorEV3_Color, modeEV3Color_Color)
#pragma config(Sensor, S4,     sonarSensor,    sensorEV3_Ultrasonic)
#pragma config(Motor,  motorA,          armMotor,      tmotorEV3_Large, PIDControl, encoder)
#pragma config(Motor,  motorB,          leftMotor,     tmotorEV3_Large, PIDControl, driveLeft, encoder)
#pragma config(Motor,  motorC,          rightMotor,    tmotorEV3_Large, PIDControl, driveRight, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//


task main()
{
	playTone(780, 50);
	forward(1, rotations, 50);
	playTone(900, 50);
	turnLeft(2, rotations, 50);
	playTone(900, 25);
	backward(1, rotations, 50);
	playTone(120, 75);
}
</CSource>
